{"ast":null,"code":"import _objectSpread from \"/Users/trae/git_repositories/measles/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/trae/git_repositories/measles/src/components/views/submit/defineAlerts/alertSelection/AlertSelection.js\";\nimport React from 'react';\nimport Popup from 'reactjs-popup';\nimport styles from './alertselection.module.scss';\nimport classNames from 'classnames'; // JSX for Define Alerts section of Submit page.\n\nconst AlertSelection = ({\n  def,\n  allDefs,\n  defineAlertsInputs,\n  setDefineAlertsInputs\n}) => {\n  /**\n   * [handleChange description]\n   * @method handleChange\n   * @param  {[type]}     event [description]\n   * @param  {[type]}     def   [description]\n   * @return {[type]}           [description]\n   */\n  const handleChange = (event, def) => {\n    // Define new set of define alerts inputs.\n    const newDefineAlertsInputs = _objectSpread({}, defineAlertsInputs, {\n      [def.slug]: event.target.value\n    }); // Remove anything with a prerequisite that is no longer fulfilled.\n\n\n    allDefs.forEach(otherDef => {\n      if (otherDef.slug === def.slug) return;\n\n      if (otherDef.prerequisite && otherDef.prerequisite.slug === def.slug) {\n        // If the new value of this optionset no longer meets the prereq\n        // requirement, unset the dependent optionset's value.\n        const requirementMet = otherDef.prerequisite.values.includes(event.target.value);\n        if (!requirementMet) newDefineAlertsInputs[otherDef.slug] = 'n/a';else if (newDefineAlertsInputs[otherDef.slug] === 'n/a') {\n          newDefineAlertsInputs[otherDef.slug] = undefined;\n        }\n      }\n    }); // Check whether the inputs are complete.\n    // Update define alerts inputs data\n\n    setDefineAlertsInputs(newDefineAlertsInputs);\n  }; // Gray out non-applicable alert sections\n\n\n  let enabled = true;\n\n  if (def.prerequisite !== undefined) {\n    enabled = def.prerequisite.values.includes(defineAlertsInputs[def.prerequisite.slug]);\n  }\n\n  const definitionJsx = React.createElement(\"div\", {\n    className: classNames(styles.definition, {\n      [styles.wide]: def.styleOptions.wide,\n      [styles.disabled]: !enabled\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.defHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: def.iconPath,\n    className: styles.icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, def.title)), React.createElement(\"div\", {\n    className: styles.optionSet,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.radioList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, def.optionSet.map(o => {\n    return React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      checked: o.name === defineAlertsInputs[def.slug] || o.dataname && o.dataname === defineAlertsInputs[def.slug] || o.apiname && o.apiname === defineAlertsInputs[def.slug],\n      name: def.name,\n      value: o.apiname,\n      type: \"radio\",\n      onChange: e => {\n        handleChange(e, def);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), o.name);\n  }))), React.createElement(\"div\", {\n    className: styles.footnote,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, def.footnoteText || ''));\n  return React.createElement(Popup, {\n    trigger: open => definitionJsx,\n    position: \"top center\",\n    on: \"hover\",\n    closeOnDocumentClick: true,\n    mouseEnterDelay: 500,\n    disabled: enabled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Only applicable if facility on generator power\")));\n};\n\nexport default AlertSelection;","map":{"version":3,"sources":["/Users/trae/git_repositories/measles/src/components/views/submit/defineAlerts/alertSelection/AlertSelection.js"],"names":["React","Popup","styles","classNames","AlertSelection","def","allDefs","defineAlertsInputs","setDefineAlertsInputs","handleChange","event","newDefineAlertsInputs","slug","target","value","forEach","otherDef","prerequisite","requirementMet","values","includes","undefined","enabled","definitionJsx","definition","wide","styleOptions","disabled","defHeader","iconPath","icon","title","optionSet","radioList","map","o","name","dataname","apiname","e","footnote","footnoteText","open"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Popup from 'reactjs-popup'\nimport styles from './alertselection.module.scss'\nimport classNames from 'classnames'\n\n// JSX for Define Alerts section of Submit page.\nconst AlertSelection = ({\n    def,\n    allDefs,\n    defineAlertsInputs,\n    setDefineAlertsInputs,\n  }) => {\n\n    /**\n     * [handleChange description]\n     * @method handleChange\n     * @param  {[type]}     event [description]\n     * @param  {[type]}     def   [description]\n     * @return {[type]}           [description]\n     */\n    const handleChange = (event, def) => {\n\n      // Define new set of define alerts inputs.\n      const newDefineAlertsInputs = {\n        ...defineAlertsInputs,\n        [def.slug]: event.target.value\n      };\n\n      // Remove anything with a prerequisite that is no longer fulfilled.\n      allDefs.forEach(otherDef => {\n        if (otherDef.slug === def.slug) return;\n        if (otherDef.prerequisite && otherDef.prerequisite.slug === def.slug) {\n\n          // If the new value of this optionset no longer meets the prereq\n          // requirement, unset the dependent optionset's value.\n          const requirementMet =\n            otherDef.prerequisite.values\n              .includes(event.target.value);\n          if (!requirementMet) newDefineAlertsInputs[otherDef.slug] = 'n/a';\n          else if (newDefineAlertsInputs[otherDef.slug] === 'n/a') {\n            newDefineAlertsInputs[otherDef.slug] = undefined;\n          }\n        }\n      });\n\n      // Check whether the inputs are complete.\n\n      // Update define alerts inputs data\n      setDefineAlertsInputs(newDefineAlertsInputs);\n    };\n\n    // Gray out non-applicable alert sections\n    let enabled = true;\n    if (def.prerequisite !== undefined) {\n      enabled =\n        def.prerequisite.values\n          .includes(defineAlertsInputs[def.prerequisite.slug]);\n    }\n\n    const definitionJsx =\n    (\n      <div className={classNames(styles.definition, {\n        [styles.wide]: def.styleOptions.wide,\n        [styles.disabled]: !enabled,\n      } )}>\n        <div className={styles.defHeader}>\n          <img src={def.iconPath} className={styles.icon} /><h3>{def.title}</h3>\n        </div>\n        <div className={styles.optionSet}>\n          <div className={styles.radioList}>\n            {\n              def.optionSet.map(o => {\n                return (\n                    <label>\n                      <input\n                        checked={\n                          o.name === defineAlertsInputs[def.slug]\n                          || (o.dataname && o.dataname === defineAlertsInputs[def.slug])\n                          || (o.apiname && o.apiname === defineAlertsInputs[def.slug])\n                        }\n                        name={def.name}\n                        value={o.apiname}\n                        type=\"radio\"\n                        onChange={(e) => { handleChange(e, def); }}\n                      />{o.name}\n                    </label>\n                )\n              })\n            }\n          </div>\n        </div>\n        <div className={styles.footnote}>{def.footnoteText || ''}</div>\n      </div>\n    );\n    return <Popup\n      trigger={open => definitionJsx}\n      position=\"top center\"\n      on=\"hover\"\n      closeOnDocumentClick\n      mouseEnterDelay={500}\n      disabled={enabled}\n      >\n      <div>\n        <span>Only applicable if facility on generator power</span>\n      </div>\n  </Popup>\n}\n\nexport default AlertSelection\n"]},"metadata":{},"sourceType":"module"}