{"ast":null,"code":"var _jsxFileName = \"/Users/trae/git_repositories/measles/src/components/layout/drawer/Drawer.js\";\nimport React from 'react';\nimport Popup from 'reactjs-popup';\nimport styles from './drawer.module.scss';\nimport Alerts from '../../alerts/Alerts.js';\nimport Chart from '../../chart/Chart.js'; // If DEMO_DATE exists, use it (frames all data in site relative to the demo\n// date that is specified). Otherwise, today's date will be used (\"now\").\n\nvar DEMO_DATE = process.env.DEMO_DATE;\n\nif (typeof DEMO_DATE === 'undefined') {\n  DEMO_DATE = '2025-07-04T23:56:00';\n}\n\nconst now = DEMO_DATE !== undefined ? new Date(DEMO_DATE) : new Date(); //: React.FC\n\nconst Drawer = ({\n  facilities,\n  mappedFacilityTypes\n}) => {\n  // split facilities by severity\n  const stableFacilities = [];\n  const alertedFacilities = [];\n  const criticalFacilities = [];\n  facilities.forEach(e => {\n    // Only include facility types that are enabled (in the Options menu of the\n    // map) for tabulation in this bar chart.\n    if (!mappedFacilityTypes.includes(e.type)) return;\n\n    switch (e.severity) {\n      case 'stable':\n        stableFacilities.push(e);\n        break;\n\n      case 'alerted':\n        alertedFacilities.push(e);\n        break;\n\n      case 'critical':\n        criticalFacilities.push(e);\n        break;\n\n      default:\n        break;\n    }\n  });\n  return React.createElement(\"div\", {\n    className: styles.drawer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.titleContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Emergency power threat conditions\"), React.createElement(\"p\", {\n    className: styles.date,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, now.toLocaleString('en-us', {\n    month: 'long',\n    year: 'numeric',\n    day: 'numeric'\n  }))), React.createElement(\"div\", {\n    className: styles.alertsContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: styles.subtitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"National alerts\", React.createElement(Popup, {\n    trigger: open => React.createElement(\"i\", {\n      className: \"material-icons-outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"info\"),\n    position: \"top center\",\n    on: \"hover\",\n    closeOnDocumentClick: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"infoTooltip\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Includes all currently active alerts nationwide.\")))), React.createElement(Alerts, {\n    stableCount: stableFacilities.length,\n    alertedCount: alertedFacilities.length,\n    criticalCount: criticalFacilities.length,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: styles.subtitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"States with alerts\"), React.createElement(Chart, {\n    stableFacilities: stableFacilities,\n    alertedFacilities: alertedFacilities,\n    criticalFacilities: criticalFacilities,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })));\n};\n\nexport default Drawer;","map":{"version":3,"sources":["/Users/trae/git_repositories/measles/src/components/layout/drawer/Drawer.js"],"names":["React","Popup","styles","Alerts","Chart","DEMO_DATE","process","env","now","undefined","Date","Drawer","facilities","mappedFacilityTypes","stableFacilities","alertedFacilities","criticalFacilities","forEach","e","includes","type","severity","push","drawer","titleContainer","title","date","toLocaleString","month","year","day","alertsContainer","subtitle","open","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,sBAAlB,C,CAEA;AACA;;AACA,IAAIC,SAAS,GAAGC,OAAO,CAACC,GAAR,CAAYF,SAA5B;;AACA,IAAI,OAAOA,SAAP,KAAqB,WAAzB,EAAsC;AACpCA,EAAAA,SAAS,GAAG,qBAAZ;AACD;;AACD,MAAMG,GAAG,GAAGH,SAAS,KAAKI,SAAd,GAA0B,IAAIC,IAAJ,CAASL,SAAT,CAA1B,GAAgD,IAAIK,IAAJ,EAA5D,C,CAEA;;AACA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAAyC;AAEtD;AACA,QAAMC,gBAAgB,GAAG,EAAzB;AACA,QAAMC,iBAAiB,GAAG,EAA1B;AACA,QAAMC,kBAAkB,GAAG,EAA3B;AACAJ,EAAAA,UAAU,CAACK,OAAX,CAAmBC,CAAC,IAAI;AAEtB;AACA;AACA,QAAI,CAACL,mBAAmB,CAACM,QAApB,CAA6BD,CAAC,CAACE,IAA/B,CAAL,EAA2C;;AAC3C,YAAQF,CAAC,CAACG,QAAV;AACE,WAAK,QAAL;AACEP,QAAAA,gBAAgB,CAACQ,IAAjB,CAAsBJ,CAAtB;AACA;;AACF,WAAK,SAAL;AACEH,QAAAA,iBAAiB,CAACO,IAAlB,CAAuBJ,CAAvB;AACA;;AACF,WAAK,UAAL;AACEF,QAAAA,kBAAkB,CAACM,IAAnB,CAAwBJ,CAAxB;AACA;;AACF;AACE;AAXJ;AAaD,GAlBD;AAoBA,SACE;AAAK,IAAA,SAAS,EAAEhB,MAAM,CAACqB,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAErB,MAAM,CAACsB,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAEtB,MAAM,CAACuB,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADF,EAEE;AAAG,IAAA,SAAS,EAAEvB,MAAM,CAACwB,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGlB,GAAG,CAACmB,cAAJ,CAAmB,OAAnB,EAA4B;AAC3BC,IAAAA,KAAK,EAAE,MADoB;AAE3BC,IAAAA,IAAI,EAAE,SAFqB;AAG3BC,IAAAA,GAAG,EAAE;AAHsB,GAA5B,CADH,CAFF,CADF,EAWE;AAAK,IAAA,SAAS,EAAE5B,MAAM,CAAC6B,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAE7B,MAAM,CAAC8B,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAGE,oBAAC,KAAD;AACE,IAAA,OAAO,EAAEC,IAAI,IACX;AAAG,MAAA,SAAS,EAAC,yBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAIE,IAAA,QAAQ,EAAC,YAJX;AAKE,IAAA,EAAE,EAAC,OALL;AAME,IAAA,oBAAoB,MANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE;AAAK,IAAA,SAAS,EAAE,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDADF,CARF,CAHF,CADF,EAkBE,oBAAC,MAAD;AACE,IAAA,WAAW,EAAEnB,gBAAgB,CAACoB,MADhC;AAEE,IAAA,YAAY,EAAEnB,iBAAiB,CAACmB,MAFlC;AAGE,IAAA,aAAa,EAAElB,kBAAkB,CAACkB,MAHpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,CAXF,EAmCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAEhC,MAAM,CAAC8B,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE,oBAAC,KAAD;AACE,IAAA,gBAAgB,EAAElB,gBADpB;AAEE,IAAA,iBAAiB,EAAEC,iBAFrB;AAGE,IAAA,kBAAkB,EAAEC,kBAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAnCF,CADF;AA8CD,CAxED;;AA0EA,eAAeL,MAAf","sourcesContent":["import React from 'react'\nimport Popup from 'reactjs-popup'\nimport styles from './drawer.module.scss'\n\nimport Alerts from '../../alerts/Alerts.js'\nimport Chart from '../../chart/Chart.js'\n\n// If DEMO_DATE exists, use it (frames all data in site relative to the demo\n// date that is specified). Otherwise, today's date will be used (\"now\").\nvar DEMO_DATE = process.env.DEMO_DATE\nif (typeof DEMO_DATE === 'undefined') {\n  DEMO_DATE = '2025-07-04T23:56:00'\n}\nconst now = DEMO_DATE !== undefined ? new Date(DEMO_DATE) : new Date();\n\n//: React.FC\nconst Drawer = ({ facilities, mappedFacilityTypes }) => {\n\n  // split facilities by severity\n  const stableFacilities = []\n  const alertedFacilities = []\n  const criticalFacilities = []\n  facilities.forEach(e => {\n\n    // Only include facility types that are enabled (in the Options menu of the\n    // map) for tabulation in this bar chart.\n    if (!mappedFacilityTypes.includes(e.type)) return;\n    switch (e.severity) {\n      case 'stable':\n        stableFacilities.push(e)\n        break\n      case 'alerted':\n        alertedFacilities.push(e)\n        break\n      case 'critical':\n        criticalFacilities.push(e)\n        break\n      default:\n        break\n    }\n  })\n\n  return (\n    <div className={styles.drawer}>\n      <div className={styles.titleContainer}>\n        <p className={styles.title}>Emergency power threat conditions</p>\n        <p className={styles.date}>\n          {now.toLocaleString('en-us', {\n            month: 'long',\n            year: 'numeric',\n            day: 'numeric'\n          })}\n        </p>\n      </div>\n      <div className={styles.alertsContainer}>\n        <p className={styles.subtitle}>\n          National alerts\n\n          <Popup\n            trigger={open => (\n              <i className='material-icons-outlined'>info</i>\n            )}\n            position=\"top center\"\n            on=\"hover\"\n            closeOnDocumentClick\n          >\n            <div className={\"infoTooltip\"}>\n              <span>Includes all currently active alerts nationwide.</span>\n            </div>\n          </Popup>\n\n        </p>\n        <Alerts\n          stableCount={stableFacilities.length}\n          alertedCount={alertedFacilities.length}\n          criticalCount={criticalFacilities.length}\n        />\n      </div>\n      <div>\n        <p className={styles.subtitle}>States with alerts</p>\n        <Chart\n          stableFacilities={stableFacilities}\n          alertedFacilities={alertedFacilities}\n          criticalFacilities={criticalFacilities}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Drawer\n"]},"metadata":{},"sourceType":"module"}