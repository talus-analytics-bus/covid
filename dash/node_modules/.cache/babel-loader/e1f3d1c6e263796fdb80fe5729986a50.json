{"ast":null,"code":"import countriesSource from '../../assets/featureCollections/countries.geojson';\nimport dialysisIcon from '../../assets/images/markers/dialysis-blue.png';\nimport hospitalIcon from '../../assets/images/markers/hospital-blue.png';\nimport nursingIcon from '../../assets/images/markers/nursing-blue.png';\nimport dialysisStableIcon from '../../assets/images/markers/dialysis-green.png';\nimport hospitalStableIcon from '../../assets/images/markers/hospital-green.png';\nimport nursingStableIcon from '../../assets/images/markers/nursing-green.png';\nimport dialysisAlertedIcon from '../../assets/images/markers/dialysis-yellow.png';\nimport hospitalAlertedIcon from '../../assets/images/markers/hospital-yellow.png';\nimport nursingAlertedIcon from '../../assets/images/markers/nursing-yellow.png';\nimport dialysisCriticalIcon from '../../assets/images/markers/dialysis-red.png';\nimport hospitalCriticalIcon from '../../assets/images/markers/hospital-red.png';\nimport nursingCriticalIcon from '../../assets/images/markers/nursing-red.png';\nconst param = {\n  facility: {\n    minZoom: 8\n  },\n  cluster: {\n    maxZoom: 8,\n    threshZoom: 7 // threshZoom: 14,\n\n  }\n};\n\nconst initMap = (map, observations) => {\n  map.on('load', function () {\n    addImages();\n    initGeoms(observations);\n  });\n\n  const addImages = () => {\n    Array(['dialysis-stable', dialysisStableIcon], ['hospital-stable', hospitalStableIcon], ['nursing-stable', nursingStableIcon], ['dialysis-alerted', dialysisAlertedIcon], ['hospital-alerted', hospitalAlertedIcon], ['nursing-alerted', nursingAlertedIcon], ['dialysis-critical', dialysisCriticalIcon], ['hospital-critical', hospitalCriticalIcon], ['nursing-critical', nursingCriticalIcon]).forEach(([name, icon]) => {\n      map.loadImage(icon, (err, img) => {\n        map.addImage(name, img);\n      });\n    });\n  };\n\n  const initGeoms = observations => {\n    if (!map.getSource('geoms')) map.addSource('geoms', {\n      type: 'vector',\n      url: 'mapbox://traethethird.36drkw1p'\n    });\n    observations.forEach(observation => {\n      const value = observation['value'];\n      const place_id = observation['place_id'];\n\n      if (!value) {\n        map.setFeatureState({\n          source: 'geoms',\n          sourceLayer: 'countries-9d1a76',\n          id: place_id\n        }, {});\n      } else {\n        const state = {\n          value: value\n        };\n        map.setFeatureState({\n          source: 'geoms',\n          sourceLayer: 'countries-9d1a76',\n          id: place_id\n        }, state);\n      }\n    });\n    map.addLayer({\n      id: 'geom-fills',\n      type: 'fill',\n      source: 'geoms',\n      'source-layer': 'countries-9d1a76',\n      paint: {\n        'fill-color': [\"rgb\", // red is higher when feature.properties.temperature is higher\n        Math.floor(256 / 1000 * [\"feature-state\", \"value\"]), // green is always zero\n        0, // blue is higher when feature.properties.temperature is lower\n        Math.floor(256 / 1000 * [\"-\", 1000, [\"feature-state\", \"value\"]])],\n        'fill-opacity': 0.5\n      }\n    }); //map.addLayer({\n    //  id: 'selected-fill',\n    //  type: 'fill',\n    //  source: 'geoms',\n    //  filter: ['!', true],\n    //  paint: {\n    //    'fill-color': '#627BC1',\n    //    'fill-opacity': 0.5\n    //  }\n    //})\n    //map.addLayer({\n    //  id: 'selected-border',\n    //  type: 'line',\n    //  source: 'geoms',\n    //  filter: ['!', true],\n    //  paint: {\n    //    'line-color': '#627BC1',\n    //    'line-width': 2\n    //  }\n    //})\n  };\n};\n\nexport default initMap;","map":{"version":3,"sources":["/Users/trae/git_repositories/measles/dash/src/components/map/mapUtils.js"],"names":["countriesSource","dialysisIcon","hospitalIcon","nursingIcon","dialysisStableIcon","hospitalStableIcon","nursingStableIcon","dialysisAlertedIcon","hospitalAlertedIcon","nursingAlertedIcon","dialysisCriticalIcon","hospitalCriticalIcon","nursingCriticalIcon","param","facility","minZoom","cluster","maxZoom","threshZoom","initMap","map","observations","on","addImages","initGeoms","Array","forEach","name","icon","loadImage","err","img","addImage","getSource","addSource","type","url","observation","value","place_id","setFeatureState","source","sourceLayer","id","state","addLayer","paint","Math","floor"],"mappings":"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","sourcesContent":["import countriesSource from '../../assets/featureCollections/countries.geojson'\n\nimport dialysisIcon from '../../assets/images/markers/dialysis-blue.png'\nimport hospitalIcon from '../../assets/images/markers/hospital-blue.png'\nimport nursingIcon from '../../assets/images/markers/nursing-blue.png'\nimport dialysisStableIcon from '../../assets/images/markers/dialysis-green.png'\nimport hospitalStableIcon from '../../assets/images/markers/hospital-green.png'\nimport nursingStableIcon from '../../assets/images/markers/nursing-green.png'\nimport dialysisAlertedIcon from '../../assets/images/markers/dialysis-yellow.png'\nimport hospitalAlertedIcon from '../../assets/images/markers/hospital-yellow.png'\nimport nursingAlertedIcon from '../../assets/images/markers/nursing-yellow.png'\nimport dialysisCriticalIcon from '../../assets/images/markers/dialysis-red.png'\nimport hospitalCriticalIcon from '../../assets/images/markers/hospital-red.png'\nimport nursingCriticalIcon from '../../assets/images/markers/nursing-red.png'\n\nconst param = {\n  facility: {\n    minZoom: 8,\n  },\n  cluster: {\n    maxZoom: 8,\n    threshZoom: 7,\n    // threshZoom: 14,\n  }\n};\n\nconst initMap = (map, observations) => {\n\n  map.on('load', function() {\n    addImages()\n    initGeoms(observations)\n  })\n\n  const addImages = () => {\n    Array(\n      ['dialysis-stable', dialysisStableIcon],\n      ['hospital-stable', hospitalStableIcon],\n      ['nursing-stable', nursingStableIcon],\n      ['dialysis-alerted', dialysisAlertedIcon],\n      ['hospital-alerted', hospitalAlertedIcon],\n      ['nursing-alerted', nursingAlertedIcon],\n      ['dialysis-critical', dialysisCriticalIcon],\n      ['hospital-critical', hospitalCriticalIcon],\n      ['nursing-critical', nursingCriticalIcon]\n    ).forEach(([name, icon]) => {\n      map.loadImage(icon, (err, img) => {\n        map.addImage(name, img)\n      })\n    })\n  }\n\n  const initGeoms = (observations) => {\n    if (!map.getSource('geoms'))\n      map.addSource('geoms', {\n        type: 'vector',\n        url: 'mapbox://traethethird.36drkw1p'\n      })\n\n    observations.forEach(( observation) => {\n      const value = observation['value'];\n      const place_id = observation['place_id']\n      if (!value) {\n        map.setFeatureState({source: 'geoms', sourceLayer: 'countries-9d1a76', id: place_id }, {});\n      } else {\n        const state = { value: value};\n        map.setFeatureState({source: 'geoms', sourceLayer: 'countries-9d1a76', id: place_id }, state);\n      }\n    });\n\n    map.addLayer({\n      id: 'geom-fills',\n      type: 'fill',\n      source: 'geoms',\n      'source-layer': 'countries-9d1a76',\n      paint: {\n        'fill-color': [\n          \"rgb\",\n          // red is higher when feature.properties.temperature is higher\n          Math.floor((256/1000) * [\"feature-state\", \"value\"]),\n          // green is always zero\n          0,\n          // blue is higher when feature.properties.temperature is lower\n          Math.floor((256/1000) * [\"-\", 1000, [\"feature-state\", \"value\"]])\n        ],\n        'fill-opacity': 0.5\n      }\n    })\n\n    //map.addLayer({\n    //  id: 'selected-fill',\n    //  type: 'fill',\n    //  source: 'geoms',\n    //  filter: ['!', true],\n    //  paint: {\n    //    'fill-color': '#627BC1',\n    //    'fill-opacity': 0.5\n    //  }\n    //})\n\n    //map.addLayer({\n    //  id: 'selected-border',\n    //  type: 'line',\n    //  source: 'geoms',\n    //  filter: ['!', true],\n    //  paint: {\n    //    'line-color': '#627BC1',\n    //    'line-width': 2\n    //  }\n    //})\n  }\n}\n\nexport default initMap\n"]},"metadata":{},"sourceType":"module"}