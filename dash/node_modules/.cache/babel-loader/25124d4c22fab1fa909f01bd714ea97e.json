{"ast":null,"code":"var _jsxFileName = \"/Users/trae/git_repositories/measles/src/components/layout/header/Header.tsx\";\nimport React from 'react';\nimport Popup from 'reactjs-popup';\nimport { Link } from 'react-router-dom';\nimport styles from './header.module.scss';\nimport classNames from 'classnames';\n\nconst Header = props => {\n  const showWm = props.showWm,\n        setShowWm = props.setShowWm;\n  const renderButtons = [['', null], // two placeholder buttons for spacing purposes\n  ['', null], ['About', '/about'], ['Contact us', '/contact'], ['Logout', '/landing']].map(([name, routePath]) => routePath && name && React.createElement(Link, {\n    to: routePath,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: styles.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, name)) || routePath && name && React.createElement(Popup, {\n    trigger: open => React.createElement(\"button\", {\n      className: styles.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, name),\n    position: \"top right\",\n    on: \"hover\",\n    closeOnDocumentClick: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"At launch, log in will move the blue sky page.\"))) || !routePath && !name && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }));\n  return React.createElement(\"header\", {\n    className: styles.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, props.showBack && React.createElement(Link, {\n    className: classNames(styles.button, styles.back),\n    to: \"/alerts\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: classNames(styles.button, styles.back),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: classNames('material-icons-outlined'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"arrow_back\"), \"Back to map\")), !props.showBack && // Show settings gear (containing the watermark toggle checkbox) if the\n  React.createElement(Popup, {\n    trigger: open => React.createElement(\"i\", {\n      className: \"material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"settings\"),\n    position: \"bottom left\",\n    on: \"click\",\n    arrow: false,\n    className: \"settingsMenu\",\n    closeOnDocumentClick: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.toggleWatermark,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    onClick: () => setShowWm(!showWm),\n    checked: showWm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), \"Mark pages as test data\"))), renderButtons);\n};\n\nexport default Header;","map":{"version":3,"sources":["/Users/trae/git_repositories/measles/src/components/layout/header/Header.tsx"],"names":["React","Popup","Link","styles","classNames","Header","props","showWm","setShowWm","renderButtons","map","name","routePath","button","open","header","showBack","back","toggleWatermark"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Popup from 'reactjs-popup'\nimport { Link } from 'react-router-dom'\nimport styles from './header.module.scss'\nimport classNames from 'classnames'\n\nconst Header: React.FC = (props: any) => {\n  const { showWm, setShowWm } = props\n\n  const renderButtons = [\n    ['', null], // two placeholder buttons for spacing purposes\n    ['', null],\n    ['About', '/about'],\n    ['Contact us', '/contact'],\n    ['Logout', '/landing'],\n  ].map(\n    ([name, routePath]) =>\n      (routePath && name &&(\n        <Link to={routePath}>\n          <button className={styles.button}>{name}</button>\n        </Link>\n      )) ||\n      (routePath && name && (\n        <Popup\n          trigger={open => <button className={styles.button}>{name}</button>}\n          position='top right'\n          on='hover'\n          closeOnDocumentClick\n        >\n          <div>\n            <span>At launch, log in will move the blue sky page.</span>\n          </div>\n        </Popup>\n      )) ||\n      (!routePath && !name && <div />)\n  )\n  return (\n    <header className={styles.header}>\n      {props.showBack && (\n        <Link className={classNames(styles.button, styles.back)} to='/alerts'>\n          <button className={classNames(styles.button, styles.back)}>\n            <i className={classNames('material-icons-outlined')}>arrow_back</i>\n            Back to map\n          </button>\n        </Link>\n      )}\n      {!props.showBack && (\n        // Show settings gear (containing the watermark toggle checkbox) if the\n        // \"Back to map\" button is not being shown in that space.\n        <Popup\n          trigger={open => <i className='material-icons'>settings</i>}\n          position='bottom left'\n          on='click'\n          arrow={false}\n          className='settingsMenu'\n          closeOnDocumentClick\n        >\n          <div className={styles.toggleWatermark}>\n            <label>\n              <input\n                type='checkbox'\n                onClick={() => setShowWm(!showWm)}\n                checked={showWm}\n              />\n              Mark pages as test data\n            </label>\n          </div>\n        </Popup>\n      )}\n      {renderButtons}\n    </header>\n  )\n}\n\nexport default Header\n"]},"metadata":{},"sourceType":"module"}