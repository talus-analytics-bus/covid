{"ast":null,"code":"import _slicedToArray from \"/Users/trae/git_repositories/measles/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/trae/git_repositories/measles/src/components/views/alerts/Alerts.js\";\nimport React from 'react';\nimport Map from '../../map/Map';\nimport Popup from \"reactjs-popup\";\nimport styles from './alerts.module.scss'; // type facility = {\n//   facility_id: number\n//   name: string\n//   type: string\n//   capacity: number\n//   capacity_unit: string\n//   address: string\n//   city: string\n//   state: string\n//   zip: number\n//   telephone: string\n//   latitude: number\n//   longitude: number\n// }\n// type propTypes = {\n//   facilities: facility[]\n// }\n//\n\nconst Alerts = props => {\n  // Hide the \"How to use this map\" modal if it has already been displayed\n  // once to the user.\n  const shownMapModal = props.shownMapModal; // Track the types of facilities that are allowed to be displayed on the map\n  // and counted in the bar chart.\n\n  const _React$useState = React.useState(['Hospital', 'Dialysis Facility', 'Nursing Home']),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        mappedFacilityTypes = _React$useState2[0],\n        setMappedFacilityTypes = _React$useState2[1];\n\n  return React.createElement(\"div\", {\n    className: styles.alerts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Popup // Class name for styling (found in index.scss).\n  , {\n    className: 'mapModal' // Don't open the modal if it's already been shown.\n    ,\n    defaultOpen: !shownMapModal // This is a modal.\n    ,\n    modal: true // When popup is closed, update state variable in App so it doesn't\n    // get shown again this session.\n    ,\n    onClose: () => {\n      props.setShownMapModal(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, close => React.createElement(\"div\", {\n    className: styles.modal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    className: styles.close,\n    onClick: close,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"\\xD7\"), React.createElement(\"div\", {\n    className: styles.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"How to use this map\"), React.createElement(\"div\", {\n    className: styles.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \" \", \"This map includes state and facility-level data.\", React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Click and drag to move the map\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Scroll or use map controls to zoom in/out\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Click state to view state summary\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Click bubbles to zoom closer to individual facilities\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Once zoomed in, click facility icon (H, N, D) to view facility summary\"))), React.createElement(\"div\", {\n    className: styles.actions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: styles.button,\n    onClick: () => {\n      close();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"OK\")))), React.createElement(Map, Object.assign({}, props, {\n    mappedFacilityTypes: mappedFacilityTypes,\n    setMappedFacilityTypes: setMappedFacilityTypes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })));\n};\n\nexport default Alerts;","map":{"version":3,"sources":["/Users/trae/git_repositories/measles/src/components/views/alerts/Alerts.js"],"names":["React","Map","Popup","styles","Alerts","props","shownMapModal","useState","mappedFacilityTypes","setMappedFacilityTypes","alerts","setShownMapModal","close","modal","header","content","actions","button"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AACtB;AACA;AACA,QAAMC,aAAa,GAAGD,KAAK,CAACC,aAA5B,CAHsB,CAKtB;AACA;;AANsB,0BAQpBN,KAAK,CAACO,QAAN,CAAe,CAAC,UAAD,EAAa,mBAAb,EAAkC,cAAlC,CAAf,CARoB;AAAA;AAAA,QAOfC,mBAPe;AAAA,QAOMC,sBAPN;;AAUtB,SACE;AAAK,IAAA,SAAS,EAAEN,MAAM,CAACO,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAEE;AAFF;AAGE,IAAA,SAAS,EAAE,UAHb,CAKE;AALF;AAME,IAAA,WAAW,EAAE,CAACJ,aANhB,CAQE;AARF;AASE,IAAA,KAAK,MATP,CAWE;AACA;AAZF;AAaE,IAAA,OAAO,EACL,MAAM;AACJD,MAAAA,KAAK,CAACM,gBAAN,CAAuB,IAAvB;AACD,KAhBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAoBIC,KAAK,IACL;AAAK,IAAA,SAAS,EAAET,MAAM,CAACU,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAEV,MAAM,CAACS,KAArB;AAA4B,IAAA,OAAO,EAAEA,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAIE;AAAK,IAAA,SAAS,EAAET,MAAM,CAACW,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAJF,EAKE;AAAK,IAAA,SAAS,EAAEX,MAAM,CAACY,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,sDAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8EALF,CAHF,CALF,EAgBE;AAAK,IAAA,SAAS,EAAEZ,MAAM,CAACa,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAEb,MAAM,CAACc,MADpB;AAEE,IAAA,OAAO,EAAE,MAAM;AACbL,MAAAA,KAAK;AACN,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAhBF,CArBJ,CADF,EAoDE,oBAAC,GAAD,oBAASP,KAAT;AAAgB,IAAA,mBAAmB,EAAEG,mBAArC;AAA0D,IAAA,sBAAsB,EAAEC,sBAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KApDF,CADF;AAwDD,CAlED;;AAmEA,eAAeL,MAAf","sourcesContent":["import React from 'react'\nimport Map from '../../map/Map'\nimport Popup from \"reactjs-popup\";\n\nimport styles from './alerts.module.scss'\n\n// type facility = {\n//   facility_id: number\n//   name: string\n//   type: string\n//   capacity: number\n//   capacity_unit: string\n//   address: string\n//   city: string\n//   state: string\n//   zip: number\n//   telephone: string\n//   latitude: number\n//   longitude: number\n// }\n// type propTypes = {\n//   facilities: facility[]\n// }\n//\n\nconst Alerts = props => {\n  // Hide the \"How to use this map\" modal if it has already been displayed\n  // once to the user.\n  const shownMapModal = props.shownMapModal;\n\n  // Track the types of facilities that are allowed to be displayed on the map\n  // and counted in the bar chart.\n  const [mappedFacilityTypes, setMappedFacilityTypes] =\n    React.useState(['Hospital', 'Dialysis Facility', 'Nursing Home'])\n\n  return (\n    <div className={styles.alerts}>\n      <Popup\n\n        // Class name for styling (found in index.scss).\n        className={'mapModal'}\n\n        // Don't open the modal if it's already been shown.\n        defaultOpen={!shownMapModal}\n\n        // This is a modal.\n        modal\n\n        // When popup is closed, update state variable in App so it doesn't\n        // get shown again this session.\n        onClose={\n          () => {\n            props.setShownMapModal(true);\n          }\n        }\n      >\n        {\n          close => (\n          <div className={styles.modal}>\n            <a className={styles.close} onClick={close}>\n              &times;\n            </a>\n            <div className={styles.header}>How to use this map</div>\n            <div className={styles.content}>\n              {\" \"}\n              This map includes state and facility-level data.\n              <ul>\n                <li>Click and drag to move the map</li>\n                <li>Scroll or use map controls to zoom in/out</li>\n                <li>Click state to view state summary</li>\n                <li>Click bubbles to zoom closer to individual facilities</li>\n                <li>Once zoomed in, click facility icon (H, N, D) to view facility summary</li>\n              </ul>\n            </div>\n            <div className={styles.actions}>\n              <button\n                className={styles.button}\n                onClick={() => {\n                  close();\n                }}\n              >\n                OK\n              </button>\n            </div>\n          </div>\n        )\n      }\n      </Popup>\n      <Map {...props} mappedFacilityTypes={mappedFacilityTypes} setMappedFacilityTypes={setMappedFacilityTypes} />\n    </div>\n  )\n}\nexport default Alerts\n"]},"metadata":{},"sourceType":"module"}