{"ast":null,"code":"import _slicedToArray from \"/Users/trae/git_repositories/measles/dash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/trae/git_repositories/measles/dash/src/App.js\";\nimport React from 'react';\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\nimport axios from 'axios'; // layout\n\nimport Alert from './components/layout/alert/Alert';\nimport Logo from './components/layout/logo/Logo';\nimport Header from './components/layout/header/Header';\nimport Footer from './components/layout/footer/Footer'; // views\n\nimport Alerts from './components/views/alerts/Alerts.js';\nimport Details from './components/views/details/Details'; // styles\n\nimport styles from './App.module.scss';\nimport 'material-design-icons/iconfont/material-icons.css';\nvar API_BASE = process.env.REACT_APP_API_BASE_URL;\n\nif (typeof API_BASE === 'undefined') {\n  API_BASE = 'http://localhost:5002';\n}\n\nvar DEMO_DATE = process.env.DEMO_DATE;\n\nif (typeof DEMO_DATE === 'undefined') {\n  DEMO_DATE = '2025-07-04T23:56:00';\n}\n\nconsole.log('DEMO_DATE');\nconsole.log(DEMO_DATE); //: React.FC\n\nconst App = () => {\n  console.log('Render App');\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        showWm = _React$useState2[0],\n        setShowWm = _React$useState2[1];\n\n  const _React$useState3 = React.useState(() => {\n    const initialState = [];\n    return initialState;\n  }),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        bubbleObservations = _React$useState4[0],\n        setBubbleObservations = _React$useState4[1];\n\n  const _React$useState5 = React.useState(() => {\n    const initialState = [];\n    return initialState;\n  }),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        fillObservations = _React$useState6[0],\n        setFillObservations = _React$useState6[1]; // Hide the \"How to use this map\" modal if it has already been displayed\n  // once to the user.\n\n\n  const _React$useState7 = React.useState(false),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        shownMapModal = _React$useState8[0],\n        setShownMapModal = _React$useState8[1]; // Track whether the component is still loading.\n\n\n  const _React$useState9 = React.useState(true),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        loading = _React$useState10[0],\n        setLoading = _React$useState10[1];\n  /**\n   * Get observation data from API. Updates the observation data and loading status\n   * when complete.\n   * @method getObservations\n   */\n\n\n  async function getObservations(metric_id, loading) {\n    const res = await axios(\"\".concat(API_BASE, \"/observations\"), {\n      params: {\n        metric_id: metric_id,\n        temporal_resolution: 'yearly',\n        spatial_resolution: 'country',\n        start: '2018-01-01',\n        end: '2018-01-01'\n      }\n    });\n\n    if (metric_id === 1) {\n      setBubbleObservations(res.data.data);\n    }\n\n    if (metric_id === 2) {\n      setFillObservations(res.data.data);\n    }\n\n    setLoading(loading);\n  }\n\n  React.useEffect(() => {\n    getObservations(1, true);\n    getObservations(2, false);\n  }, []); // Functions to render each page's elements.\n\n  const renderAlerts = loading ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }) : React.createElement(Alerts // map page\n  , {\n    fillObservations: fillObservations // observation data for map\n    ,\n    bubbleObservations: bubbleObservations // observation data for map\n    ,\n    shownMapModal: shownMapModal // don't show help modal more than once\n    ,\n    setShownMapModal: setShownMapModal // update modal display status\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  });\n\n  const renderDetails = iso => {\n    if (loading) return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    });else {\n      // if no selected country, load the correct one based on the ID\n      const matchingCountry = fillObservations.find(o => +o.iso === +iso);\n      return React.createElement(Details, {\n        iso: iso,\n        selectedCountry: matchingCountry,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      });\n    }\n  }; // JSX for main app. Switch component allows links in the header to be used to\n  // determine main app content.\n\n\n  return React.createElement(\"div\", {\n    className: styles.app,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(BrowserRouter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(Alert, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), React.createElement(Logo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/details/:id\",\n    render: d => {\n      return React.createElement(Header, {\n        showBack: true,\n        showWm: showWm,\n        setShowWm: setShowWm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), React.createElement(Route, {\n    render: d => {\n      return React.createElement(Header, {\n        showBack: false,\n        showWm: showWm,\n        setShowWm: setShowWm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  })), showWm && React.createElement(\"div\", {\n    className: styles.watermark,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/alerts\",\n    render: () => renderAlerts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: () => renderAlerts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/details/:id\",\n    render: d => {\n      return renderDetails(d.match.params.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }))), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/trae/git_repositories/measles/dash/src/App.js"],"names":["React","Route","Switch","BrowserRouter","axios","Alert","Logo","Header","Footer","Alerts","Details","styles","API_BASE","process","env","REACT_APP_API_BASE_URL","DEMO_DATE","console","log","App","useState","showWm","setShowWm","initialState","bubbleObservations","setBubbleObservations","fillObservations","setFillObservations","shownMapModal","setShownMapModal","loading","setLoading","getObservations","metric_id","res","params","temporal_resolution","spatial_resolution","start","end","data","useEffect","renderAlerts","renderDetails","iso","matchingCountry","find","o","app","d","watermark","match","id"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Route, Switch, BrowserRouter } from 'react-router-dom'\nimport axios from 'axios'\n\n// layout\nimport Alert from './components/layout/alert/Alert'\nimport Logo from './components/layout/logo/Logo'\nimport Header from './components/layout/header/Header'\nimport Footer from './components/layout/footer/Footer'\n\n// views\nimport Alerts from './components/views/alerts/Alerts.js'\nimport Details from './components/views/details/Details'\n\n// styles\nimport styles from './App.module.scss'\nimport 'material-design-icons/iconfont/material-icons.css'\n\nvar API_BASE = process.env.REACT_APP_API_BASE_URL\nif (typeof API_BASE === 'undefined') {\n  API_BASE = 'http://localhost:5002'\n}\n\nvar DEMO_DATE = process.env.DEMO_DATE\nif (typeof DEMO_DATE === 'undefined') {\n  DEMO_DATE = '2025-07-04T23:56:00'\n}\n\nconsole.log('DEMO_DATE')\nconsole.log(DEMO_DATE)\n\n//: React.FC\nconst App = () => {\n  console.log('Render App')\n\n  const [showWm, setShowWm] = React.useState(false)\n\n  const [bubbleObservations, setBubbleObservations] = React.useState(() => {\n    const initialState = [];\n    return initialState;\n  });\n\n  const [fillObservations, setFillObservations] = React.useState(() => {\n    const initialState = [];\n    return initialState;\n  });\n\n  // Hide the \"How to use this map\" modal if it has already been displayed\n  // once to the user.\n  const [shownMapModal, setShownMapModal] = React.useState(false);\n\n  // Track whether the component is still loading.\n  const [loading, setLoading] = React.useState(true)\n\n  /**\n   * Get observation data from API. Updates the observation data and loading status\n   * when complete.\n   * @method getObservations\n   */\n  async function getObservations(metric_id, loading) {\n    const res = await axios(`${API_BASE}/observations`, {\n      params: {\n        metric_id: metric_id,\n        temporal_resolution: 'yearly',\n        spatial_resolution: 'country',\n        start: '2018-01-01',\n        end: '2018-01-01'\n      }\n    });\n\n    if(metric_id === 1) {\n      setBubbleObservations(res.data.data)\n    }\n    if(metric_id === 2) {\n      setFillObservations(res.data.data)\n    }\n\n    setLoading(loading)\n  }\n\n  React.useEffect(() => {\n    getObservations(1, true);\n    getObservations(2, false)\n  }, [])\n\n  // Functions to render each page's elements.\n  const renderAlerts = loading ? <div /> :\n    <Alerts // map page\n      fillObservations={fillObservations} // observation data for map\n      bubbleObservations={bubbleObservations} // observation data for map\n      shownMapModal={shownMapModal} // don't show help modal more than once\n      setShownMapModal={setShownMapModal} // update modal display status\n      />\n\n  const renderDetails = iso => {\n    if (loading) return <div />\n    else {\n      // if no selected country, load the correct one based on the ID\n      const matchingCountry = fillObservations.find(o => +o.iso === +iso)\n\n      return <Details iso={iso} selectedCountry={matchingCountry} />\n    }\n  }\n\n  // JSX for main app. Switch component allows links in the header to be used to\n  // determine main app content.\n  return (\n    <div className={styles.app}>\n      <BrowserRouter>\n        <Alert />\n        <Logo />\n        <Switch>\n          <Route\n            path='/details/:id'\n            render={d => {\n              return (\n                <Header showBack={true} showWm={showWm} setShowWm={setShowWm} />\n              )\n            }}\n          />\n          <Route\n            render={d => {\n              return (\n                <Header\n                  showBack={false}\n                  showWm={showWm}\n                  setShowWm={setShowWm}\n                />\n              )\n            }}\n          />\n        </Switch>\n        {showWm && <div className={styles.watermark} />}\n        <Switch>\n          <div>\n            <Route exact path='/alerts' render={() => renderAlerts} />\n            <Route exact path='/' component={() => renderAlerts} />\n            <Route\n              path='/details/:id'\n              render={d => {\n                return renderDetails(d.match.params.id)\n              }}\n            />\n          </div>\n        </Switch>\n        <Footer />\n      </BrowserRouter>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}