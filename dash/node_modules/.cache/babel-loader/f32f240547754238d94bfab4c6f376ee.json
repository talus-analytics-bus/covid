{"ast":null,"code":"import _slicedToArray from \"/Users/trae/git_repositories/measles/dash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/trae/git_repositories/measles/dash/src/App.js\";\nimport React from 'react';\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\nimport axios from 'axios'; // layout\n\nimport Alert from './components/layout/alert/Alert';\nimport Logo from './components/layout/logo/Logo'; // views\n\nimport Alerts from './components/views/alerts/Alerts.js';\nimport Details from './components/views/details/Details'; // utility functions\n\nimport Util from './components/misc/Util.js'; // styles\n\nimport styles from './App.module.scss';\nimport 'material-design-icons/iconfont/material-icons.css';\nvar API_BASE = process.env.REACT_APP_API_BASE_URL;\n\nif (typeof API_BASE === 'undefined') {\n  API_BASE = 'http://localhost:5002';\n}\n\nvar DEMO_DATE = process.env.DEMO_DATE;\n\nif (typeof DEMO_DATE === 'undefined') {\n  DEMO_DATE = '2025-07-04T23:56:00';\n}\n\nconsole.log('DEMO_DATE');\nconsole.log(DEMO_DATE); //: React.FC\n\nconst App = () => {\n  console.log('Render App');\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        showWm = _React$useState2[0],\n        setShowWm = _React$useState2[1];\n\n  const _React$useState3 = React.useState(() => {\n    const initialState = [];\n    return initialState;\n  }),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        bubbleObservations = _React$useState4[0],\n        setBubbleObservations = _React$useState4[1];\n\n  const _React$useState5 = React.useState(() => {\n    const initialState = [];\n    return initialState;\n  }),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        fillObservations = _React$useState6[0],\n        setFillObservations = _React$useState6[1]; // Hide the \"How to use this map\" modal if it has already been displayed\n  // once to the user.\n  // turning off always until we need interval\n\n\n  const _React$useState7 = React.useState(true),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        shownMapModal = _React$useState8[0],\n        setShownMapModal = _React$useState8[1]; // Track whether the component is still loading.\n\n\n  const _React$useState9 = React.useState(true),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        loading = _React$useState10[0],\n        setLoading = _React$useState10[1];\n\n  async function getMapObservations() {\n    // get the bubble data\n    setBubbleObservations((await Util.getObservations(6, 'monthly', '2019-07-01'))); // get the fill data\n\n    setFillObservations((await Util.getObservations(4, 'yearly', '2018-01-01')));\n    setLoading(false);\n  }\n\n  React.useEffect(() => {\n    getMapObservations();\n  }, []); // Functions to render each page's elements.\n\n  const renderAlerts = loading ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }) : React.createElement(Alerts // map page\n  , {\n    fillObservations: fillObservations // observation data for map\n    ,\n    bubbleObservations: bubbleObservations // observation data for map\n    ,\n    shownMapModal: shownMapModal // don't show help modal more than once\n    ,\n    setShownMapModal: setShownMapModal // update modal display status\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  });\n\n  const renderDetails = iso => {\n    if (loading) return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    });else {\n      // if no selected country, load the correct one based on the ID\n      const matchingCountry = fillObservations.find(o => +o.iso === +iso);\n      return React.createElement(Details, {\n        iso: iso,\n        selectedCountry: matchingCountry,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      });\n    }\n  }; // JSX for main app. Switch component allows links in the header to be used to\n  // determine main app content.\n\n\n  return React.createElement(\"div\", {\n    className: styles.app,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(BrowserRouter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Logo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/alerts\",\n    render: () => renderAlerts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: () => renderAlerts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/details/:id\",\n    render: d => {\n      return renderDetails(d.match.params.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  })))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/trae/git_repositories/measles/dash/src/App.js"],"names":["React","Route","Switch","BrowserRouter","axios","Alert","Logo","Alerts","Details","Util","styles","API_BASE","process","env","REACT_APP_API_BASE_URL","DEMO_DATE","console","log","App","useState","showWm","setShowWm","initialState","bubbleObservations","setBubbleObservations","fillObservations","setFillObservations","shownMapModal","setShownMapModal","loading","setLoading","getMapObservations","getObservations","useEffect","renderAlerts","renderDetails","iso","matchingCountry","find","o","app","d","match","params","id"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Route, Switch, BrowserRouter } from 'react-router-dom'\nimport axios from 'axios'\n\n// layout\nimport Alert from './components/layout/alert/Alert'\nimport Logo from './components/layout/logo/Logo'\n\n// views\nimport Alerts from './components/views/alerts/Alerts.js'\nimport Details from './components/views/details/Details'\n\n// utility functions\nimport Util from './components/misc/Util.js'\n\n// styles\nimport styles from './App.module.scss'\nimport 'material-design-icons/iconfont/material-icons.css'\n\nvar API_BASE = process.env.REACT_APP_API_BASE_URL\nif (typeof API_BASE === 'undefined') {\n  API_BASE = 'http://localhost:5002'\n}\n\nvar DEMO_DATE = process.env.DEMO_DATE\nif (typeof DEMO_DATE === 'undefined') {\n  DEMO_DATE = '2025-07-04T23:56:00'\n}\n\nconsole.log('DEMO_DATE')\nconsole.log(DEMO_DATE)\n\n//: React.FC\nconst App = () => {\n  console.log('Render App')\n\n  const [showWm, setShowWm] = React.useState(false)\n\n  const [bubbleObservations, setBubbleObservations] = React.useState(() => {\n    const initialState = [];\n    return initialState;\n  });\n\n  const [fillObservations, setFillObservations] = React.useState(() => {\n    const initialState = [];\n    return initialState;\n  });\n\n  // Hide the \"How to use this map\" modal if it has already been displayed\n  // once to the user.\n  // turning off always until we need interval\n  const [shownMapModal, setShownMapModal] = React.useState(true);\n\n  // Track whether the component is still loading.\n  const [loading, setLoading] = React.useState(true)\n\n  async function getMapObservations() {\n    // get the bubble data\n    setBubbleObservations(await Util.getObservations(6, 'monthly', '2019-07-01'));\n    // get the fill data\n    setFillObservations(await Util.getObservations(4, 'yearly', '2018-01-01'));\n    setLoading(false);\n  }\n\n  React.useEffect(() => {\n    getMapObservations()\n  }, [])\n\n  // Functions to render each page's elements.\n  const renderAlerts = loading ? <div /> :\n    <Alerts // map page\n      fillObservations={fillObservations} // observation data for map\n      bubbleObservations={bubbleObservations} // observation data for map\n      shownMapModal={shownMapModal} // don't show help modal more than once\n      setShownMapModal={setShownMapModal} // update modal display status\n      />\n\n  const renderDetails = iso => {\n    if (loading) return <div />\n    else {\n      // if no selected country, load the correct one based on the ID\n      const matchingCountry = fillObservations.find(o => +o.iso === +iso)\n\n      return <Details iso={iso} selectedCountry={matchingCountry} />\n    }\n  }\n\n  // JSX for main app. Switch component allows links in the header to be used to\n  // determine main app content.\n  return (\n    <div className={styles.app}>\n      <BrowserRouter>\n        <Logo />\n        <Switch>\n          <div>\n            <Route exact path='/alerts' render={() => renderAlerts} />\n            <Route exact path='/' component={() => renderAlerts} />\n            <Route\n              path='/details/:id'\n              render={d => {\n                return renderDetails(d.match.params.id)\n              }}\n            />\n          </div>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}