{"ast":null,"code":"import _slicedToArray from \"/Users/trae/git_repositories/measles/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/trae/git_repositories/measles/src/components/map/filter/Filter.js\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport styles from './filter.module.scss';\n\nconst Filter = props => {\n  const checkboxList = [{\n    slug: 'hospital',\n    // slug: identifier for mapbox layer ids\n    dataname: 'Hospital',\n    // dataname: database name of fac. type\n    label: 'Hospital',\n    // label: frontend name of fac. type\n    state: React.useState(true) // state: state variables/hooks\n\n  }, {\n    slug: 'dialysis',\n    dataname: 'Dialysis Facility',\n    label: 'Large dialysis center',\n    state: React.useState(true)\n  }, {\n    slug: 'nursing',\n    dataname: 'Nursing Home',\n    label: 'Skilled nursing home',\n    state: React.useState(true)\n  }]; // Track whether the options menu is open or closed\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        open = _React$useState2[0],\n        setOpen = _React$useState2[1]; // JSX of options menu\n\n\n  return React.createElement(\"div\", {\n    className: classNames(styles.mapOverlay, styles.filter, {\n      [styles.open]: open\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.toggleButton,\n    onClick: () => setOpen(!open),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Options\"), React.createElement(\"i\", {\n    className: classNames('material-icons-outlined', {\n      [styles.open]: open\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"expand_more\")), React.createElement(\"div\", {\n    className: styles.contentContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Facility types shown\"), checkboxList.map(checkboxItem => React.createElement(\"div\", {\n    className: styles.facilityTypeOption,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classNames(styles.circle, styles[checkboxItem.label.toLowerCase()]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    onChange: event => {\n      props.handleCheck(event, checkboxList);\n    },\n    type: \"checkbox\",\n    name: \"facilityType\",\n    value: checkboxItem.dataname,\n    id: checkboxItem.label,\n    checked: checkboxItem.state[0],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), \" \", checkboxItem.label)))));\n};\n\nexport default Filter;","map":{"version":3,"sources":["/Users/trae/git_repositories/measles/src/components/map/filter/Filter.js"],"names":["React","classNames","styles","Filter","props","checkboxList","slug","dataname","label","state","useState","open","setOpen","mapOverlay","filter","toggleButton","contentContainer","map","checkboxItem","facilityTypeOption","circle","toLowerCase","event","handleCheck"],"mappings":"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","sourcesContent":["import React from 'react'\nimport classNames from 'classnames'\n\nimport styles from './filter.module.scss'\n\nconst Filter = (props) => {\n  const checkboxList =\n  [\n    {\n      slug: 'hospital', // slug: identifier for mapbox layer ids\n      dataname: 'Hospital', // dataname: database name of fac. type\n      label: 'Hospital', // label: frontend name of fac. type\n      state: React.useState(true) // state: state variables/hooks\n    },\n\n    {\n      slug: 'dialysis',\n      dataname: 'Dialysis Facility',\n      label: 'Large dialysis center',\n      state: React.useState(true)\n    },\n\n    {\n      slug: 'nursing',\n      dataname: 'Nursing Home',\n      label: 'Skilled nursing home',\n      state: React.useState(true)\n    },\n  ];\n\n  // Track whether the options menu is open or closed\n  const [open, setOpen] = React.useState(false);\n\n  // JSX of options menu\n  return (\n    <div\n      className={classNames(styles.mapOverlay, styles.filter, {\n        [styles.open]: open\n      })}\n    >\n      <div className={styles.toggleButton} onClick={() => setOpen(!open)}>\n        <p>Options</p>\n        <i\n          className={classNames('material-icons-outlined', {\n            [styles.open]: open\n          })}\n        >\n          expand_more\n        </i>\n      </div>\n        <div className={styles.contentContainer}>\n          <p>Facility types shown</p>\n          {checkboxList.map(checkboxItem => (\n            <div className={styles.facilityTypeOption}>\n              <div\n                className={classNames(styles.circle, styles[checkboxItem.label.toLowerCase()])}\n              />\n              <label>\n                <input\n                  onChange={(event) => {props.handleCheck(event, checkboxList)}}\n                  type=\"checkbox\"\n                  name=\"facilityType\"\n                  value={checkboxItem.dataname}\n                  id={checkboxItem.label}\n                  checked={checkboxItem.state[0]}\n                /> {checkboxItem.label}\n              </label>\n            </div>\n          ))}\n        </div>\n    </div>\n  )\n}\nexport default Filter\n"]},"metadata":{},"sourceType":"module"}