{"ast":null,"code":"import _slicedToArray from \"/Users/trae/git_repositories/measles/dash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/trae/git_repositories/measles/dash/src/App.js\";\nimport React from 'react';\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\nimport axios from 'axios'; // layout\n\nimport Alert from './components/layout/alert/Alert';\nimport Logo from './components/layout/logo/Logo';\nimport Header from './components/layout/header/Header';\nimport Footer from './components/layout/footer/Footer'; // views\n\nimport Alerts from './components/views/alerts/Alerts.js';\nimport Details from './components/views/details/Details'; // styles\n\nimport styles from './App.module.scss';\nimport 'material-design-icons/iconfont/material-icons.css';\nvar API_BASE = process.env.REACT_APP_API_BASE_URL;\n\nif (typeof API_BASE === 'undefined') {\n  API_BASE = 'http://localhost:5002';\n}\n\nvar DEMO_DATE = process.env.DEMO_DATE;\n\nif (typeof DEMO_DATE === 'undefined') {\n  DEMO_DATE = '2025-07-04T23:56:00';\n}\n\nconsole.log('DEMO_DATE');\nconsole.log(DEMO_DATE); //: React.FC\n\nconst App = () => {\n  console.log('Render App'); // Show the watermark on all pages? Controlled by checkbox in left side of\n  // the header (gray area).\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        showWm = _React$useState2[0],\n        setShowWm = _React$useState2[1]; // Load facility data.\n\n\n  const _React$useState3 = React.useState([]),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        observations = _React$useState4[0],\n        setObservations = _React$useState4[1]; // Hide the \"How to use this map\" modal if it has already been displayed\n  // once to the user.\n\n\n  const _React$useState5 = React.useState(false),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        shownMapModal = _React$useState6[0],\n        setShownMapModal = _React$useState6[1]; // Track whether the component is still loading.\n\n\n  const _React$useState7 = React.useState(true),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        loading = _React$useState8[0],\n        setLoading = _React$useState8[1]; // Unused state hooks below.\n  // const [statusUpdates, setStatusUpdates] = React.useState([])\n  // const [alertHistory, setAlertHistory] = React.useState([])\n  // const [stableFacilities, setStableFacilities] = React.useState([])\n  // const [alertedFacilities, setAlertedFacilities] = React.useState([])\n  // const [criticalFacilities, setCriticalFacilities] = React.useState([])\n\n  /**\n   * Get observation data from API. Updates the observation data and loading status\n   * when complete.\n   * @method getObservations\n   */\n\n\n  async function getObservations() {\n    const res = await axios(\"\".concat(API_BASE, \"/observations\"), {\n      params: {\n        metric_id: 2,\n        temporal_resolution: 'yearly',\n        spatial_resolution: 'country',\n        start: '2018-01-01'\n      }\n    });\n    setObservations(res.data.data);\n    setLoading(false);\n  } // When we need to get initial observations in before rendering\n\n\n  getObservations();\n  React.useEffect(() => {}, []); // Functions to render each page's elements.\n\n  const renderAlerts = loading ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }) : React.createElement(Alerts // map page\n  , {\n    observations: observations // observation data for map\n    ,\n    shownMapModal: shownMapModal // don't show help modal more than once\n    ,\n    setShownMapModal: setShownMapModal // update modal display status\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  });\n\n  const renderDetails = iso => {\n    if (loading) return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    });else {\n      // if no selected country, load the correct one based on the ID\n      const matchingCountry = observations.find(o => +o.iso === +iso);\n      return React.createElement(Details, {\n        iso: iso,\n        selectedCountry: matchingCountry,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      });\n    }\n  }; // JSX for main app. Switch component allows links in the header to be used to\n  // determine main app content.\n\n\n  return React.createElement(\"div\", {\n    className: styles.app,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(BrowserRouter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(Alert, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), React.createElement(Logo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/details/:id\",\n    render: d => {\n      return React.createElement(Header, {\n        showBack: true,\n        showWm: showWm,\n        setShowWm: setShowWm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(Route, {\n    render: d => {\n      return React.createElement(Header, {\n        showBack: false,\n        showWm: showWm,\n        setShowWm: setShowWm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  })), showWm && React.createElement(\"div\", {\n    className: styles.watermark,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/alerts\",\n    render: () => renderAlerts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: () => renderAlerts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/details/:id\",\n    render: d => {\n      return renderDetails(d.match.params.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }))), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/trae/git_repositories/measles/dash/src/App.js"],"names":["React","Route","Switch","BrowserRouter","axios","Alert","Logo","Header","Footer","Alerts","Details","styles","API_BASE","process","env","REACT_APP_API_BASE_URL","DEMO_DATE","console","log","App","useState","showWm","setShowWm","observations","setObservations","shownMapModal","setShownMapModal","loading","setLoading","getObservations","res","params","metric_id","temporal_resolution","spatial_resolution","start","data","useEffect","renderAlerts","renderDetails","iso","matchingCountry","find","o","app","d","watermark","match","id"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Route, Switch, BrowserRouter } from 'react-router-dom'\nimport axios from 'axios'\n\n// layout\nimport Alert from './components/layout/alert/Alert'\nimport Logo from './components/layout/logo/Logo'\nimport Header from './components/layout/header/Header'\nimport Footer from './components/layout/footer/Footer'\n\n// views\nimport Alerts from './components/views/alerts/Alerts.js'\nimport Details from './components/views/details/Details'\n\n// styles\nimport styles from './App.module.scss'\nimport 'material-design-icons/iconfont/material-icons.css'\n\nvar API_BASE = process.env.REACT_APP_API_BASE_URL\nif (typeof API_BASE === 'undefined') {\n  API_BASE = 'http://localhost:5002'\n}\n\nvar DEMO_DATE = process.env.DEMO_DATE\nif (typeof DEMO_DATE === 'undefined') {\n  DEMO_DATE = '2025-07-04T23:56:00'\n}\n\nconsole.log('DEMO_DATE')\nconsole.log(DEMO_DATE)\n\n//: React.FC\nconst App = () => {\n  console.log('Render App')\n\n  // Show the watermark on all pages? Controlled by checkbox in left side of\n  // the header (gray area).\n  const [showWm, setShowWm] = React.useState(false)\n\n  // Load facility data.\n  const [observations, setObservations] = React.useState([]);\n\n  // Hide the \"How to use this map\" modal if it has already been displayed\n  // once to the user.\n  const [shownMapModal, setShownMapModal] = React.useState(false);\n\n  // Track whether the component is still loading.\n  const [loading, setLoading] = React.useState(true)\n\n  // Unused state hooks below.\n  // const [statusUpdates, setStatusUpdates] = React.useState([])\n  // const [alertHistory, setAlertHistory] = React.useState([])\n  // const [stableFacilities, setStableFacilities] = React.useState([])\n  // const [alertedFacilities, setAlertedFacilities] = React.useState([])\n  // const [criticalFacilities, setCriticalFacilities] = React.useState([])\n\n  /**\n   * Get observation data from API. Updates the observation data and loading status\n   * when complete.\n   * @method getObservations\n   */\n  async function getObservations() {\n    const res = await axios(`${API_BASE}/observations`, {\n      params: {\n        metric_id: 2,\n        temporal_resolution: 'yearly',\n        spatial_resolution: 'country',\n        start: '2018-01-01'\n      }\n    });\n\n    setObservations(res.data.data)\n    setLoading(false)\n  }\n\n  // When we need to get initial observations in before rendering\n  getObservations()\n\n  React.useEffect(() => {\n  }, [])\n\n  // Functions to render each page's elements.\n  const renderAlerts = loading ? <div /> :\n    <Alerts // map page\n      observations={observations} // observation data for map\n      shownMapModal={shownMapModal} // don't show help modal more than once\n      setShownMapModal={setShownMapModal} // update modal display status\n      />\n\n  const renderDetails = iso => {\n    if (loading) return <div />\n    else {\n      // if no selected country, load the correct one based on the ID\n      const matchingCountry = observations.find(o => +o.iso === +iso)\n\n      return <Details iso={iso} selectedCountry={matchingCountry} />\n    }\n  }\n\n  // JSX for main app. Switch component allows links in the header to be used to\n  // determine main app content.\n  return (\n    <div className={styles.app}>\n      <BrowserRouter>\n        <Alert />\n        <Logo />\n        <Switch>\n          <Route\n            path='/details/:id'\n            render={d => {\n              return (\n                <Header showBack={true} showWm={showWm} setShowWm={setShowWm} />\n              )\n            }}\n          />\n          <Route\n            render={d => {\n              return (\n                <Header\n                  showBack={false}\n                  showWm={showWm}\n                  setShowWm={setShowWm}\n                />\n              )\n            }}\n          />\n        </Switch>\n        {showWm && <div className={styles.watermark} />}\n        <Switch>\n          <div>\n            <Route exact path='/alerts' render={() => renderAlerts} />\n            <Route exact path='/' component={() => renderAlerts} />\n            <Route\n              path='/details/:id'\n              render={d => {\n                return renderDetails(d.match.params.id)\n              }}\n            />\n          </div>\n        </Switch>\n        <Footer />\n      </BrowserRouter>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}