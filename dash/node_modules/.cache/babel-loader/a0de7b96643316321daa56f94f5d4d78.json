{"ast":null,"code":"import _slicedToArray from \"/Users/trae/git_repositories/measles/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/trae/git_repositories/measles/src/App.js\";\nimport React from 'react';\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\nimport axios from 'axios'; // layout\n\nimport Alert from './components/layout/alert/Alert';\nimport Logo from './components/layout/logo/Logo';\nimport Header from './components/layout/header/Header';\nimport Footer from './components/layout/footer/Footer'; // views\n\nimport Alerts from './components/views/alerts/Alerts.js';\nimport Details from './components/views/details/Details';\nimport Landing from './components/views/landing/Landing.js'; // styles\n\nimport styles from './App.module.scss';\nimport 'material-design-icons/iconfont/material-icons.css';\nconst API_BASE = process.env.REACT_APP_API_BASE_URL;\nvar DEMO_DATE = process.env.DEMO_DATE;\n\nif (typeof DEMO_DATE === 'undefined') {\n  DEMO_DATE = '2025-07-04T23:56:00';\n}\n\nconsole.log('DEMO_DATE');\nconsole.log(DEMO_DATE); //: React.FC\n\nconst App = () => {\n  console.log('Render App'); // Show the watermark on all pages? Controlled by checkbox in left side of\n  // the header (gray area).\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        showWm = _React$useState2[0],\n        setShowWm = _React$useState2[1]; // Load facility data.\n\n\n  const _React$useState3 = React.useState([]),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        facilities = _React$useState4[0],\n        setFacilities = _React$useState4[1]; // Hide the \"How to use this map\" modal if it has already been displayed\n  // once to the user.\n\n\n  const _React$useState5 = React.useState(false),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        shownMapModal = _React$useState6[0],\n        setShownMapModal = _React$useState6[1]; // Track whether the component is still loading.\n\n\n  const _React$useState7 = React.useState(true),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        loading = _React$useState8[0],\n        setLoading = _React$useState8[1]; // Unused state hooks below.\n  // const [statusUpdates, setStatusUpdates] = React.useState([])\n  // const [alertHistory, setAlertHistory] = React.useState([])\n  // const [stableFacilities, setStableFacilities] = React.useState([])\n  // const [alertedFacilities, setAlertedFacilities] = React.useState([])\n  // const [criticalFacilities, setCriticalFacilities] = React.useState([])\n\n  /**\n   * Get facility data from API. Updates the facility data and loading status\n   * when complete.\n   * @method getFacilities\n   */\n\n\n  async function getFacilities() {\n    const res = await axios(\"\".concat(API_BASE, \"/facilities\"), {\n      params: {\n        date: DEMO_DATE\n      }\n    });\n    const sf = [];\n    const af = [];\n    const cf = [];\n    res.data.data.forEach(e => {\n      // assign random severity for testing\n      // const rand = Math.floor(Math.random() * Math.floor(3))\n      // switch (rand) {\n      //   case 0:\n      //     e.severity = 'stable'\n      //     break\n      //   case 1:\n      //     e.severity = 'alerted'\n      //     break\n      //   case 2:\n      //     e.severity = 'critical'\n      //     break\n      //   default:\n      //     break\n      // }\n      // This is real\n      switch (e.severity) {\n        case 'stable':\n          sf.push(e);\n          break;\n\n        case 'alerted':\n          af.push(e);\n          break;\n\n        case 'critical':\n          cf.push(e);\n          break;\n\n        default:\n          break;\n      }\n    });\n    setFacilities(res.data.data);\n    setLoading(false);\n  } // When components are renders, get the facility data.\n\n\n  React.useEffect(() => {\n    getFacilities();\n  }, []); // Functions to render each page's elements.\n\n  const renderAlerts = loading ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }) : React.createElement(Alerts // map page\n  , {\n    facilities: facilities // facility data for map\n    ,\n    shownMapModal: shownMapModal // don't show help modal more than once\n    ,\n    setShownMapModal: setShownMapModal // update modal display status\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  });\n\n  const renderLanding = d => {\n    return loading ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }) : React.createElement(Landing, {\n      facilities: facilities,\n      showSuccessModal: d.location.state && d.location.state.showSuccessModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    });\n  };\n\n  const renderDetails = id => {\n    if (loading) return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    });else {\n      // if no selected facility, load the correct one based on the ID\n      // if selected facility is in facilities data, set it\n      const matchingFacility = facilities.find(f => +f.facility_id === +id); // if not in facilities data, load it directly\n      // TODO\n\n      return React.createElement(Details, {\n        facility_id: id,\n        selectedFacility: matchingFacility,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      });\n    }\n  }; // JSX for main app. Switch component allows links in the header to be used to\n  // determine main app content.\n\n\n  return React.createElement(\"div\", {\n    className: styles.app,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(BrowserRouter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(Alert, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }), React.createElement(Logo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/details/:id\",\n    render: d => {\n      return React.createElement(Header, {\n        showBack: true,\n        showWm: showWm,\n        setShowWm: setShowWm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }), React.createElement(Route, {\n    render: d => {\n      return React.createElement(Header, {\n        showBack: false,\n        showWm: showWm,\n        setShowWm: setShowWm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  })), showWm && React.createElement(\"div\", {\n    className: styles.watermark,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/alerts\",\n    render: () => renderAlerts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: () => renderLanding,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/landing\",\n    component: d => {\n      console.log(d);\n      return renderLanding(d);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/details/:id\",\n    render: d => {\n      return renderDetails(d.match.params.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }))), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/trae/git_repositories/measles/src/App.js"],"names":["React","Route","Switch","BrowserRouter","axios","Alert","Logo","Header","Footer","Alerts","Details","Landing","styles","API_BASE","process","env","REACT_APP_API_BASE_URL","DEMO_DATE","console","log","App","useState","showWm","setShowWm","facilities","setFacilities","shownMapModal","setShownMapModal","loading","setLoading","getFacilities","res","params","date","sf","af","cf","data","forEach","e","severity","push","useEffect","renderAlerts","renderLanding","d","location","state","showSuccessModal","renderDetails","id","matchingFacility","find","f","facility_id","app","watermark","match"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Route, Switch, BrowserRouter } from 'react-router-dom'\nimport axios from 'axios'\n\n// layout\nimport Alert from './components/layout/alert/Alert'\nimport Logo from './components/layout/logo/Logo'\nimport Header from './components/layout/header/Header'\nimport Footer from './components/layout/footer/Footer'\n\n// views\nimport Alerts from './components/views/alerts/Alerts.js'\nimport Details from './components/views/details/Details'\nimport Landing from './components/views/landing/Landing.js'\n\n// styles\nimport styles from './App.module.scss'\nimport 'material-design-icons/iconfont/material-icons.css'\n\nconst API_BASE = process.env.REACT_APP_API_BASE_URL\nvar DEMO_DATE = process.env.DEMO_DATE\n\nif (typeof DEMO_DATE === 'undefined') {\n  DEMO_DATE = '2025-07-04T23:56:00'\n}\n\nconsole.log('DEMO_DATE')\nconsole.log(DEMO_DATE)\n\n//: React.FC\nconst App = () => {\n  console.log('Render App')\n\n  // Show the watermark on all pages? Controlled by checkbox in left side of\n  // the header (gray area).\n  const [showWm, setShowWm] = React.useState(false)\n\n  // Load facility data.\n  const [facilities, setFacilities] = React.useState([]);\n\n  // Hide the \"How to use this map\" modal if it has already been displayed\n  // once to the user.\n  const [shownMapModal, setShownMapModal] = React.useState(false);\n\n  // Track whether the component is still loading.\n  const [loading, setLoading] = React.useState(true)\n\n  // Unused state hooks below.\n  // const [statusUpdates, setStatusUpdates] = React.useState([])\n  // const [alertHistory, setAlertHistory] = React.useState([])\n  // const [stableFacilities, setStableFacilities] = React.useState([])\n  // const [alertedFacilities, setAlertedFacilities] = React.useState([])\n  // const [criticalFacilities, setCriticalFacilities] = React.useState([])\n\n  /**\n   * Get facility data from API. Updates the facility data and loading status\n   * when complete.\n   * @method getFacilities\n   */\n  async function getFacilities() {\n    const res = await axios(`${API_BASE}/facilities`, {\n      params: { date: DEMO_DATE }\n    })\n\n    const sf = []\n    const af = []\n    const cf = []\n    res.data.data.forEach(e => {\n      // assign random severity for testing\n      // const rand = Math.floor(Math.random() * Math.floor(3))\n      // switch (rand) {\n      //   case 0:\n      //     e.severity = 'stable'\n      //     break\n      //   case 1:\n      //     e.severity = 'alerted'\n      //     break\n      //   case 2:\n      //     e.severity = 'critical'\n      //     break\n      //   default:\n      //     break\n      // }\n\n      // This is real\n      switch (e.severity) {\n        case 'stable':\n          sf.push(e)\n          break\n        case 'alerted':\n          af.push(e)\n          break\n        case 'critical':\n          cf.push(e)\n          break\n        default:\n          break\n      }\n    })\n\n    setFacilities(res.data.data)\n    setLoading(false)\n  }\n\n  // When components are renders, get the facility data.\n  React.useEffect(() => {\n    getFacilities()\n  }, [])\n\n  // Functions to render each page's elements.\n  const renderAlerts = loading ? <div /> :\n    <Alerts // map page\n      facilities={facilities} // facility data for map\n      shownMapModal={shownMapModal} // don't show help modal more than once\n      setShownMapModal={setShownMapModal} // update modal display status\n      />\n  const renderLanding = (d) => {\n    return loading ? <div /> : <Landing facilities={facilities} showSuccessModal = {d.location.state && d.location.state.showSuccessModal}/>\n  };\n  const renderDetails = id => {\n    if (loading) return <div />\n    else {\n      // if no selected facility, load the correct one based on the ID\n      // if selected facility is in facilities data, set it\n      const matchingFacility = facilities.find(f => +f.facility_id === +id)\n      // if not in facilities data, load it directly\n      // TODO\n\n      return <Details facility_id={id} selectedFacility={matchingFacility} />\n    }\n  }\n\n  // JSX for main app. Switch component allows links in the header to be used to\n  // determine main app content.\n  return (\n    <div className={styles.app}>\n      <BrowserRouter>\n        <Alert />\n        <Logo />\n        <Switch>\n          <Route\n            path='/details/:id'\n            render={d => {\n              return (\n                <Header showBack={true} showWm={showWm} setShowWm={setShowWm} />\n              )\n            }}\n          />\n          <Route\n            render={d => {\n              return (\n                <Header\n                  showBack={false}\n                  showWm={showWm}\n                  setShowWm={setShowWm}\n                />\n              )\n            }}\n          />\n        </Switch>\n        {showWm && <div className={styles.watermark} />}\n        <Switch>\n          <div>\n            <Route exact path='/alerts' render={() => renderAlerts} />\n            <Route exact path='/' component={() => renderLanding} />\n            <Route exact path='/landing' component={(d) => {console.log(d); return renderLanding(d)}} />\n            <Route\n              path='/details/:id'\n              render={d => {\n                return renderDetails(d.match.params.id)\n              }}\n            />\n          </div>\n        </Switch>\n        <Footer />\n      </BrowserRouter>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}